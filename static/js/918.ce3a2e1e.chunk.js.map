{"version":3,"file":"static/js/918.ce3a2e1e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","components/ContactList/ContactList.styled.js","utils/getRandomHexColor.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getFilter = state => state.contacts.filter;\n\n","import styled from 'styled-components';\n\nimport getRandomHexColor from 'utils/getRandomHexColor';\n\nexport const ListIcon = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  border-radius: 50%;\n  background-color: ${getRandomHexColor};\n`;\n\nexport const ListBtn = styled.button`\n  border: none;\n  background-color: ${({ theme }) => theme.colors.transparent};\n  opacity: 0.7;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    opacity: 1;\n  }\n`;\n\nexport const ContactsTable = styled.table`\n  width: 100%;\n\n  border-collapse: collapse;\n`;\n\nexport const ContactsTableHead = styled.th`\n  padding: 15px;\n\n  font-size: 16px;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.accentPrimary};\n\n  :not(:last-child) {\n    border-right: 1px solid ${({ theme }) => theme.colors.white};\n  }\n`;\n\nexport const ContactsTableRow = styled.tr`\n  background-color: ${({ theme }) => theme.colors.transparent};\n\n  transition: opacity ${({ theme }) => theme.transitions.slower};\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.accentSecondary};\n  }\n`;\n\nexport const ContactsTableCeil = styled.td`\n  padding: 10px;\n  text-align: center;\n\n  :not(:last-child) {\n    border-right: 1px solid ${({ theme }) => theme.colors.darkgrey};\n  }\n`;\n\nexport const ContactsFlexCeil = styled.td`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n\n  padding: 10px;\n\n  :not(:last-child) {\n    border-right: 1px solid ${({ theme }) => theme.colors.darkgrey};\n  }\n`;\n\nexport const Loading = styled.p`\n  padding: 20px;\n  text-align: center;\n`;","export default function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`.padEnd(7, '0');\n}\n","import { FaTrashAlt, FaUser } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsLoading, getContacts, getFilter } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nimport {\n  ListIcon,\n  ListBtn,\n  ContactsTable,\n  ContactsTableHead,\n  ContactsTableRow,\n  ContactsTableCeil,\n  ContactsFlexCeil,\n  Loading,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const filter = useSelector(getFilter);\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name?.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n    const filteredContacts = getFilteredContacts();\n\n\n  return (\n    <>\n        <ContactsTable>\n          <thead>\n            <tr>\n              <ContactsTableHead>Name</ContactsTableHead>\n              <ContactsTableHead>Phone number</ContactsTableHead>\n              <ContactsTableHead>\n                Contacts ({contacts.length})\n              </ContactsTableHead>\n            </tr>\n          </thead>\n\n          <tbody>\n          {isLoading ? (<Loading>Loading...</Loading>) : (<>\n\n            {filteredContacts.map(contact => (\n              <ContactsTableRow key={contact.id}>\n              <ContactsFlexCeil>\n                <ListIcon>\n                  <FaUser size=\"20\" color=\"white\" />\n                </ListIcon>\n                {contact.name}\n              </ContactsFlexCeil>\n              <ContactsTableCeil>{contact.number}</ContactsTableCeil>\n              <ContactsTableCeil>\n                <ListBtn\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                >\n                  <FaTrashAlt size=\"20\" />\n                </ListBtn>\n              </ContactsTableCeil>\n            </ContactsTableRow>\n            ))}\n            \n          </>)}\n          </tbody>\n        </ContactsTable>\n      \n    </>\n  );\n};","import { Helmet } from 'react-helmet';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactEditor } from '../components/ContactEditor/ContactEditor';\n\nexport default function Tasks() {\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactEditor />\n      <div>'Request in progress...'</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ListIcon","styled","_templateObject","_taggedTemplateLiteral","concat","Math","floor","random","toString","padEnd","ListBtn","_templateObject2","_ref","theme","colors","transparent","ContactsTable","_templateObject3","ContactsTableHead","_templateObject4","_ref2","fontWeights","bold","_ref3","white","_ref4","accentPrimary","_ref5","ContactsTableRow","_templateObject5","_ref6","_ref7","transitions","slower","_ref8","accentSecondary","ContactsTableCeil","_templateObject6","_ref9","darkgrey","ContactsFlexCeil","_templateObject7","_ref10","Loading","_templateObject8","ContactList","dispatch","useDispatch","useSelector","filteredContacts","contact","_contact$name","name","toLowerCase","includes","_jsx","_Fragment","children","_jsxs","length","map","FaUser","size","color","number","type","onClick","deleteContact","id","FaTrashAlt","Tasks","Helmet","ContactEditor"],"sourceRoot":""}