{"version":3,"file":"static/js/77.f53ffa9f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","utils/getRandomHexColor.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\ndisplay: flex;\nmin-width: 600px;\ntext-align: center;\njustify-content: space-around;\n`;\n\n\n","\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.loading;\nexport const selectFilter = state => state.contacts.filter;\n\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  min-width: 600px;\n  max-with: 800px;\n`;\n\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/slice';\nimport Form from 'react-bootstrap/Form';\n\nimport { Section } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Section>\n      <Form.Control\n      name=\"filterInput\"\n              type=\"text\"\n              placeholder=\"Find contacts by name\"\n        className=\" mr-sm-2\"\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n      </Section>\n  );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { Section } from './ContactForm.styled';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { Filter } from '../Filter/Filter';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const id = nanoid();\n    const newContact = { id, name, number };\n    const form = e.target;\n    form.reset();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() ===\n        name.toLowerCase())\n    ) {\n      alert(`${newContact.name} already exists!`);\n    } else {\n      dispatch(addContact(newContact));\n      }\n  };\n\n  return (\n    <><Section>\n<Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Control type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={contacts.name}\n            onChange={e => setName(e.target.value)}\n          required\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Control type=\"tel\"\n            name=\"number\"\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={contacts.number}\n          onChange={e => setNumber(e.target.value)}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Add contact\n      </Button>\n      <Filter/>\n      </Form>\n    </Section>\n</>\n  );\n};\n","import styled from 'styled-components';\n\nimport getRandomHexColor from 'utils/getRandomHexColor';\n\nexport const ListIcon = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  border-radius: 50%;\n  background-color: ${getRandomHexColor};\n`;\n\nexport const ListBtn = styled.button`\n  border: none;\n  background-color: ${({ theme }) => theme.colors.transparent};\n  opacity: 0.7;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    opacity: 1;\n  }\n`;\n\nexport const ContactsTable = styled.table`\n  width: 100%;\n\n  border-collapse: collapse;\n`;\n\nexport const ContactsTableHead = styled.th`\n  padding: 15px;\n\n  font-size: 16px;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.accentPrimary};\n\n  :not(:last-child) {\n    border-right: 1px solid ${({ theme }) => theme.colors.white};\n  }\n`;\n\nexport const ContactsTableRow = styled.tr`\n  background-color: ${({ theme }) => theme.colors.transparent};\n\n  transition: opacity ${({ theme }) => theme.transitions.slower};\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.accentSecondary};\n  }\n`;\n\nexport const ContactsTableCeil = styled.td`\n  padding: 10px;\n  text-align: center;\n\n  :not(:last-child) {\n    border-right: 1px solid ${({ theme }) => theme.colors.darkgrey};\n  }\n`;\n\nexport const ContactsFlexCeil = styled.td`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n\n  padding: 10px;\n\n  :not(:last-child) {\n    border-right: 1px solid ${({ theme }) => theme.colors.darkgrey};\n  }\n`;\n\nexport const Loading = styled.p`\n  padding: 20px;\n  text-align: center;\n`;","export default function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`.padEnd(7, '0');\n}\n","import { FaTrashAlt, FaUser } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoading, selectContacts, selectFilter } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nimport {\n  ListIcon,\n  ListBtn,\n  ContactsTable,\n  ContactsTableHead,\n  ContactsTableRow,\n  ContactsTableCeil,\n  ContactsFlexCeil,\n  Loading,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const filter = useSelector(selectFilter);\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name?.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n    const filteredContacts = getFilteredContacts();\n\n\n  return (\n    <>\n        <ContactsTable>\n          <thead>\n            <tr>\n              <ContactsTableHead>Name</ContactsTableHead>\n              <ContactsTableHead>Phone number</ContactsTableHead>\n              <ContactsTableHead>\n                Contacts ({contacts.length})\n              </ContactsTableHead>\n            </tr>\n          </thead>\n\n          <tbody>\n          {isLoading ? (<Loading>Loading...</Loading>) : (<>\n\n            {filteredContacts.map(contact => (\n              <ContactsTableRow key={contact.id}>\n              <ContactsFlexCeil>\n                <ListIcon>\n                  <FaUser size=\"20\" color=\"white\" />\n                </ListIcon>\n                {contact.name}\n              </ContactsFlexCeil>\n              <ContactsTableCeil>{contact.number}</ContactsTableCeil>\n              <ContactsTableCeil>\n                <ListBtn\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                >\n                  <FaTrashAlt size=\"20\" />\n                </ListBtn>\n              </ContactsTableCeil>\n            </ContactsTableRow>\n            ))}\n            \n          </>)}\n          </tbody>\n        </ContactsTable>\n      \n    </>\n  );\n};","import { ContactForm } from '../components/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoading } from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\n\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    \n    <>\n        <title>Your contacts</title>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","selectContacts","state","contacts","items","selectLoading","loading","selectFilter","filter","Filter","dispatch","useDispatch","_jsx","children","Form","name","type","placeholder","className","onChange","e","changeFilter","target","value","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","_Fragment","_jsxs","onSubmit","preventDefault","newContact","id","nanoid","reset","find","contact","toLowerCase","alert","concat","addContact","controlId","pattern","title","required","Button","variant","ListIcon","Math","floor","random","toString","padEnd","ListBtn","_templateObject2","_ref","theme","colors","transparent","ContactsTable","_templateObject3","ContactsTableHead","_templateObject4","_ref2","fontWeights","bold","_ref3","white","_ref4","accentPrimary","_ref5","ContactsTableRow","_templateObject5","_ref6","_ref7","transitions","slower","_ref8","accentSecondary","ContactsTableCeil","_templateObject6","_ref9","darkgrey","ContactsFlexCeil","_templateObject7","_ref10","Loading","_templateObject8","ContactList","isLoading","filteredContacts","_contact$name","includes","length","map","FaUser","size","color","onClick","deleteContact","FaTrashAlt","Contacts","useEffect","fetchContacts"],"sourceRoot":""}